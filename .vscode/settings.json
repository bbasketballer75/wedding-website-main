{
  // Enhanced Editor Settings (WITH COMPREHENSIVE AUTO-FIXING!)
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll.sonarjs": "explicit",
    "source.fixAll.powershell": "explicit",
    "source.organizeImports": "explicit",
    "source.sortMembers": "explicit",
    "source.fixAll": "explicit",
    "source.addMissingImports": "explicit",
    "source.removeUnusedImports": "explicit",
    "source.convertImports": "explicit"
  },
  "editor.inlayHints.enabled": "on",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.tabCompletion": "on",
  "editor.wordBasedSuggestions": "allDocuments",
  "editor.experimental.asyncTokenization": true,
  "editor.experimental.asyncTokenizationLogging": false,
  "editor.unicodeHighlight.invisibleCharacters": true,
  "editor.unicodeHighlight.ambiguousCharacters": true,
  "editor.stickyScroll.enabled": true,
  "editor.experimental.pasteActions.enabled": true,
  "editor.experimental.agentMode.enabled": true,
  "editor.experimental.agentMode.autoSuggest": true,
  "editor.experimental.agentMode.contextualActions": true,
  "editor.experimental.agentMode.proactiveRefactoring": true,
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "on",
    "strings": "on"
  },
  "editor.suggestOnTriggerCharacters": true,
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.acceptSuggestionOnEnter": "smart",
  // Enhanced Linting Configuration
  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],
  "eslint.run": "onSave",
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  // React/Next.js Development (Enhanced with new extensions)
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "emmet.triggerExpansionOnTab": true,
  // TypeScript/JavaScript Enhanced Configuration (AGENT MODE AUTOMATION!)
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "typescript.suggest.autoImports": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.experimental.aiCodeActions": true,
  "typescript.experimental.tsserver.web.projectWideIntellisense.enabled": true,
  "typescript.experimental.tsserver.web.projectWideIntellisense.suppressSemanticErrors": false,
  "typescript.suggest.includeCompletionsForImportStatements": true,
  "typescript.suggest.includeCompletionsWithSnippetText": true,
  "typescript.experimental.agentMode.autoRefactor": true,
  "typescript.experimental.agentMode.smartRename": true,
  "typescript.experimental.agentMode.contextualSuggestions": true,
  "typescript.experimental.agentMode.errorCorrection": true,
  "typescript.codeActions.enabled": true,
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.referencesCodeLens.enabled": true,
  "typescript.suggest.completeFunctionCalls": true,
  "javascript.suggest.autoImports": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.preferences.importModuleSpecifier": "relative",
  "javascript.experimental.aiCodeActions": true,
  "javascript.experimental.agentMode.autoRefactor": true,
  "javascript.experimental.agentMode.smartRename": true,
  "javascript.experimental.agentMode.contextualSuggestions": true,
  "javascript.suggest.completeFunctionCalls": true,
  // TailwindCSS IntelliSense Configuration (DESIGN SUPERPOWERS!)
  "tailwindCSS.includeLanguages": {
    "javascript": "javascript",
    "html": "HTML",
    "typescript": "typescript"
  },
  "tailwindCSS.experimental.classRegex": [
    ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
    ["className\\s*:\\s*['\"`]([^'\"`]*)['\"`]"],
    ["class\\s*:\\s*['\"`]([^'\"`]*)['\"`]"],
    ["tw`([^`]*)`", "'([^']*)'"],
    ["tw\\.[^`]+`([^`]*)`", "'([^']*)'"],
    ["styled\\.[^`]+`([^`]*)`", "'([^']*)'"]
  ],
  "tailwindCSS.experimental.configFile": null,
  "tailwindCSS.experimental.showPixelEquivalents": true,
  "tailwindCSS.experimental.colorDecorators": true,
  "tailwindCSS.codeActions": true,
  "tailwindCSS.lint.cssConflict": "warning",
  "tailwindCSS.lint.invalidApply": "error",
  "tailwindCSS.lint.invalidConfigPath": "error",
  "tailwindCSS.lint.invalidTailwindDirective": "error",
  "tailwindCSS.lint.invalidVariant": "error",
  "tailwindCSS.lint.recommendedVariantOrder": "warning",
  // Accessibility Enhancements
  "accessibility.defaultLinter": "axe",
  "accessibility.runOnSave": true,
  "accessibility.highlightViolations": true,
  // Error Lens Configuration (Inline Error Display)
  "errorLens.enabledDiagnosticLevels": ["error", "warning", "info"],
  "errorLens.gutterIconsEnabled": true,
  "errorLens.statusBarIconsEnabled": true,
  // Firebase Integration
  "firebase.hosting.source": ".next",
  "firebase.firestore.indexes": true,
  "firebase.functions.source": "backend",
  // AI Integration Enhancements (WITH AGENT MODE SUPERPOWERS!)
  "github.copilot.advanced": {
    "indexing.enable": true,
    "agent.mode": "automatic",
    "context.include": ["**/*.{js,ts,jsx,tsx,json,md}", "!**/node_modules/**"],
    "debug.useNodeFetcher": true,
    "length": 8000,
    "temperature": 0.1,
    "top_p": 1,
    "experimental.chat.codeActions": true,
    "experimental.chat.followUps": true,
    "experimental.chat.references": true,
    "experimental.multilineCompletions": true,
    "experimental.contextualInlineCompletions": true,
    "experimental.agentMode.autoComplete": true,
    "experimental.agentMode.contextAware": true,
    "experimental.agentMode.proactiveAssistance": true,
    "experimental.agentMode.codeGeneration": true,
    "experimental.agentMode.refactoring": true,
    "experimental.agentMode.debugging": true,
    "experimental.agentMode.testing": true,
    "experimental.agentMode.documentation": true
  },
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "json": true,
    "jsonc": true,
    "css": true,
    "scss": true,
    "sass": true,
    "less": true
  },
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.editor.iterativeEditing": true,
  "github.copilot.chat.localeOverride": "en",
  "github.copilot.chat.welcomeMessage": "never",
  "github.copilot.chat.experimental.codeGeneration": true,
  "github.copilot.chat.experimental.contextualChat": true,
  "github.copilot.chat.experimental.slashCommands": true,
  "github.copilot.chat.experimental.agentMode": true,
  "github.copilot.chat.experimental.autonomousEditing": true,
  "github.copilot.chat.experimental.batchProcessing": true,
  "github.copilot.chat.experimental.workspaceAnalysis": true,
  // Claude Sonnet 4 as default AI model (ENHANCED FOR WEDDING PROJECT!)
  "claude.defaultModel": "claude-3-sonnet-20240229",
  "claude.preferredModel": "claude-3-sonnet-20240229",
  "claude.fallbackModel": "claude-3-sonnet-20240229",
  "claude.forceSonnet": true,
  "claude.billingEnabled": true,
  "claude.mcpFullAccess": true,
  "claude.mcpServers": [
    "filesystem",
    "fetch",
    "time",
    "mongodb",
    "git",
    "playwright",
    "sequentialthinking",
    "memory"
  ],
  "claude.alwaysUseSonnet": true,
  "claude.experimental.contextEnhancement": true,
  "claude.experimental.projectSpecificKnowledge": true,
  "claude.experimental.multiModalAssistance": true,
  "claude.experimental.creativeSuggestions": true,
  // Task and File Watching (AGENT MODE AUTOMATION!)
  "task.autoDetect": "on",
  "task.experimental.agentMode": true,
  "task.experimental.autoRun": true,
  "task.experimental.smartExecution": true,
  "task.experimental.contextualTasks": true,
  "files.watcherExclude": {
    "**/.copilot_context.txt": true,
    "**/node_modules/**": true,
    "**/.git/**": true
  },
  "files.associations": {
    "*.env.*": "dotenv",
    "package.json": "json",
    "*.json": "json"
  },
  "files.experimental.agentMode.autoSave": true,
  "files.experimental.agentMode.smartBackup": true,
  // Windows-Specific Optimizations (WITH EXPERIMENTAL FEATURES!)
  "files.eol": "\r\n",
  "files.autoGuessEncoding": true,
  "powershell.codeFormatting.preset": "OTBS",
  "terminal.integrated.shell.windows": "pwsh.exe",
  "terminal.integrated.experimental.tabs": true,
  "terminal.integrated.experimental.stickyScroll.enabled": true,
  "terminal.integrated.suggest.enabled": true,
  "terminal.integrated.enablePersistentSessions": true,
  "terminal.integrated.experimental.typeAhead": true,
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell"
  },
  // CSS/SCSS Linting Configuration (DESIGN SUPERPOWERS!)
  "css.lint.unknownAtRules": "ignore",
  "css.completion.completePropertyWithSemicolon": true,
  "css.completion.triggerPropertyValueCompletion": true,
  "css.hover.documentation": true,
  "css.hover.references": true,
  "css.validate": true,
  "scss.lint.unknownAtRules": "ignore",
  "scss.completion.completePropertyWithSemicolon": true,
  "scss.completion.triggerPropertyValueCompletion": true,
  "scss.hover.documentation": true,
  "scss.hover.references": true,
  "scss.validate": true,
  "less.completion.completePropertyWithSemicolon": true,
  "less.completion.triggerPropertyValueCompletion": true,
  "less.hover.documentation": true,
  "less.hover.references": true,
  "less.validate": true,
  // SonarLint Configuration
  "sonarlint.rules": {
    "css:S4662": "off"
  },
  // PowerShell Analysis Configuration (ENHANCED)
  "powershell.scriptAnalysis.enable": true,
  "powershell.scriptAnalysis.settingsPath": "",
  "powershell.codeFormatting.autoCorrectAliases": true,
  "powershell.codeFormatting.avoidSemicolonsAsLineTerminators": true,
  "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
  "powershell.codeFormatting.useConstantStrings": true,
  "powershell.codeFormatting.useCorrectCasing": true,
  "powershell.integratedConsole.focusConsoleOnExecute": false,
  // Stylelint Configuration
  "stylelint.validate": ["css", "scss", "sass"],
  "stylelint.customSyntax": "postcss-scss",
  // Search and File Explorer Enhancements (PREVIEW FEATURES!)
  "search.exclude": {
    "**/node_modules": true,
    "**/coverage": true,
    "**/.next": true,
    "**/dist": true,
    "**/logs": true,
    "**/*.log": true
  },
  "files.exclude": {
    "**/.copilot_context.txt": true,
    "**/coverage": true,
    "**/.next": true
  },
  "search.experimental.searchInOpenEditors": true,
  "explorer.experimental.fileNesting.enabled": true,
  "explorer.experimental.fileNesting.expand": false,
  "explorer.experimental.fileNesting.patterns": {
    "*.ts": "${capture}.js, ${capture}.d.ts, ${capture}.js.map",
    "*.tsx": "${capture}.js, ${capture}.jsx",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml",
    "*.config.js": "${capture}.config.*.js, ${capture}.config.*.ts",
    "next.config.*": "next-env.d.ts, .env*, *.config.*"
  },
  // Performance Optimizations (WITH EXPERIMENTAL FEATURES!)
  "extensions.autoUpdate": false,
  "extensions.autoCheckUpdates": false,
  "workbench.enableExperiments": true,
  "workbench.experimental.settingsProfiles.enabled": true,
  "workbench.experimental.cloudChanges.enabled": true,
  "workbench.experimental.cloudChanges.autoResume": "onReload",
  "workbench.experimental.editSessions.enabled": true,
  "workbench.experimental.shareLocalFileSystem.enabled": true,
  "telemetry.telemetryLevel": "off",
  "workbench.editor.experimental.defaultBinaryEditor": "default",
  "workbench.experimental.layoutControl.enabled": true,
  // Git Integration Enhancements
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.showPushSuccessNotification": true,
  "scm.diffDecorationsGutterVisibility": "always",
  // Debugging Configuration (AGENT MODE AUTOMATION!)
  "debug.allowBreakpointsEverywhere": true,
  "debug.inlineValues": "on",
  "debug.showBreakpointsInOverviewRuler": true,
  "debug.experimental.agentMode.autoBreakpoints": true,
  "debug.experimental.agentMode.smartStepping": true,
  "debug.experimental.agentMode.contextualDebugging": true,
  "debug.experimental.agentMode.autoWatch": true,
  "debug.experimental.agentMode.predictiveDebugging": true,
  // Intellisense Enhancements
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vsintellicode.features.python.deepLearning": "enabled",
  // Test Explorer Integration (AGENT MODE AUTOMATION!)
  "testing.automaticallyOpenPeekView": "failureInVisibleDocument",
  "testing.followRunningTest": true,
  "testing.experimental.agentMode.autoGenerate": true,
  "testing.experimental.agentMode.smartExecution": true,
  "testing.experimental.agentMode.contextualTests": true,
  "testing.experimental.agentMode.autoFix": true,
  "testing.experimental.continuousIntegration": true,
  "testing.experimental.smartCoverage": true,
  // Markdown Enhancement
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "on",
    "editor.lineNumbers": "off"
  },
  // JSON Enhancement
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // 🚀 EXPERIMENTAL SUPERPOWERS SECTION 🚀
  "workbench.experimental.quickOpen.enableExperimentalNewVersion": true,
  "workbench.experimental.commandPalette.experimental": true,
  "diffEditor.experimental.showMoves": true,
  "diffEditor.experimental.useVersion2": true,
  "notebook.experimental.remoteSave": true,
  "notebook.experimental.useMarkdownRenderer": true,
  "scm.experimental.showHistoryGraph": true,
  "remote.experimental.tunnelInformation": true,
  // AI-Powered Development Features
  "workbench.experimental.AI.enabled": true,
  "editor.experimental.predictiveCursor": true,
  "editor.experimental.smartCommitCharacterCompletion": true,
  // Advanced Git Integration
  "git.experimental.branchProtection": true,
  "git.experimental.includeCommitMessageInStash": true,
  "git.experimental.timeline.date": "committed",
  // Enhanced Language Server Features
  "typescript.experimental.expandableHover": true,
  "html.experimental.custom.tags": true,
  "css.experimental.customData": true,
  // 🎨 VISUAL DESIGN & STYLING SUPERPOWERS 🎨
  "html.format.wrapAttributes": "force-expand-multiline",
  "html.format.wrapLineLength": 120,
  "html.format.indentInnerHtml": true,
  "html.format.preserveNewLines": true,
  "html.format.maxPreserveNewLines": 2,
  "html.format.endWithNewline": true,
  "html.format.extraLiners": "head, body, /html",
  "html.completion.attributeDefaultValue": "doublequotes",
  "html.autoClosingTags": true,
  "editor.linkedEditing": true,
  "html.trace.server": "verbose",
  // Emmet Enhanced for Design
  "emmet.showExpandedAbbreviation": "always",
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.variables": {
    "lang": "en",
    "charset": "UTF-8"
  },
  "emmet.syntaxProfiles": {
    "html": {
      "inline_break": 3,
      "wrap_line_length": 120,
      "tag_case": "lower",
      "attr_case": "lower",
      "attr_quotes": "double",
      "markup": true,
      "bem": true
    }
  },
  // Color Preview & Management
  "editor.colorDecorators": true,
  "editor.experimental.colorDecoratorsLimit": 500,
  "workbench.colorCustomizations": {},
  "workbench.experimental.colorCustomizations": true,
  // Advanced Bracket Management for Design
  "editor.guides.bracketPairsHorizontal": "active",
  "editor.guides.highlightActiveBracketPair": true,
  "editor.matchBrackets": "always",
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  // Font & Typography Enhancements
  "editor.fontLigatures": true,
  "editor.experimental.fontFamily": "'Cascadia Code', 'Fira Code', 'JetBrains Mono', Consolas, 'Courier New', monospace",
  "editor.fontSize": 14,
  "editor.lineHeight": 1.5,
  "editor.experimental.typescriptClientTheme": "dark",
  // Live Preview & Design Tools
  "livePreview.defaultPreviewPath": "/index.html",
  "livePreview.portNumber": 3001,
  "livePreview.showStatusBarItem": true,
  "livePreview.autoRefreshPreview": "onChange",
  "livePreview.experimentalClientPendingHighlight": true,
  // Advanced CSS Grid & Flexbox Tools
  "css.experimental.gridLayout": true,
  "css.experimental.flexboxLayout": true,
  "css.experimental.containerQueries": true,
  "css.experimental.cascade": true,
  // Design Token & Variable Management
  "css.customData": [],
  "css.experimental.postcss": true,
  "css.experimental.atProperty": true,
  // Responsive Design Tools
  "html.experimental.customData": true,
  "html.experimental.responsive": true,
  // Design System Integration
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": "explicit"
    },
    "editor.suggest.insertMode": "replace",
    "editor.experimental.colorDecorators": true
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": "explicit"
    },
    "editor.suggest.insertMode": "replace",
    "editor.experimental.colorDecorators": true
  },
  "[less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.suggest.insertMode": "replace",
    "editor.experimental.colorDecorators": true
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.suggest.insertMode": "replace",
    "editor.experimental.colorDecorators": true
  },
  // SVG & Icon Management
  "svg.completion.emmet": true,
  "svg.preview.mode": "svg",
  "svg.experimental.minify": false,
  // Image & Media Optimization Hints
  "images.experimental.optimization": true,
  "images.experimental.webp": true,
  "images.experimental.avif": true,
  // 🤖 ULTIMATE AGENT MODE AUTOMATION SUPERPOWERS 🤖
  "workbench.experimental.agentMode.enabled": true,
  "workbench.experimental.agentMode.autoComplete": true,
  "workbench.experimental.agentMode.contextualAssistance": true,
  "workbench.experimental.agentMode.proactiveActions": true,
  "workbench.experimental.agentMode.smartWorkspace": true,
  "workbench.experimental.agentMode.automatedRefactoring": true,
  "workbench.experimental.agentMode.intelligentCodeGeneration": true,
  "workbench.experimental.agentMode.predictiveEditing": true,
  "workbench.experimental.agentMode.contextualDocumentation": true,
  "workbench.experimental.agentMode.smartTesting": true,
  "workbench.experimental.agentMode.autonomousDebugging": true,
  "workbench.experimental.agentMode.workflowOptimization": true,
  // Autonomous Code Actions
  "editor.experimental.agentMode.autoImportOptimization": true,
  "editor.experimental.agentMode.smartCodeCompletion": true,
  "editor.experimental.agentMode.contextualHints": true,
  "editor.experimental.agentMode.proactiveErrorPrevention": true,
  "editor.experimental.agentMode.intelligentFormatting": true,
  // Workspace Intelligence
  "workspace.experimental.agentMode.fileAnalysis": true,
  "workspace.experimental.agentMode.dependencyManagement": true,
  "workspace.experimental.agentMode.projectInsights": true,
  "workspace.experimental.agentMode.performanceOptimization": true,
  "workspace.experimental.agentMode.securityScanning": true,
  // Advanced Automation Workflows
  "automation.experimental.cicdIntegration": true,
  "automation.experimental.deploymentOptimization": true,
  "automation.experimental.codeQualityMonitoring": true,
  "automation.experimental.performanceTracking": true,
  "automation.experimental.accessibilityAuditing": true,
  "automation.experimental.smartBackups": true,
  // AI-Powered Code Generation
  "codeGeneration.experimental.contextAware": true,
  "codeGeneration.experimental.patternRecognition": true,
  "codeGeneration.experimental.architectureOptimization": true,
  "codeGeneration.experimental.bestPracticeEnforcement": true,
  "codeGeneration.experimental.crossFileIntelligence": true,
  // Predictive Development Features
  "prediction.experimental.nextAction": true,
  "prediction.experimental.codeCompletion": true,
  "prediction.experimental.errorPrevention": true,
  "prediction.experimental.optimizationSuggestions": true,
  "prediction.experimental.refactoringOpportunities": true,
  // 💍 PROJECT-SPECIFIC POST-WEDDING CELEBRATION WEBSITE ENHANCEMENTS 💍
  "project.experimental.postWeddingOptimizations": true,
  "project.experimental.memoryPreservation": true,
  "project.experimental.photoGalleryEnhancements": true,
  "project.experimental.guestMemorySharing": true,
  "project.experimental.weddingStorytellingFeatures": true,
  "project.experimental.responsiveDesignFocus": true,
  "project.experimental.accessibilityFirstApproach": true,
  "project.experimental.performanceOptimization": true,
  "project.experimental.firebaseIntegration": true,
  "project.experimental.netlifyDeploymentOptimization": true,
  // Post-Wedding Celebration Specific Development Helpers
  "wedding.experimental.imageOptimization": true,
  "wedding.experimental.guestbookFeatures": true,
  "wedding.experimental.memorySharing": true,
  "wedding.experimental.photoStorytellingFeatures": true,
  "wedding.experimental.celebrationHighlights": true,
  "wedding.experimental.mobileFirstDesign": true,
  "wedding.experimental.socialMediaIntegration": true,
  "wedding.experimental.seoOptimization": true,
  "wedding.experimental.weddingMemoriesArchiving": true, // Next.js Post-Wedding Celebration Site Specific
  "nextjs.experimental.postWeddingSiteOptimizations": true,
  "nextjs.experimental.memoryGalleryPerformance": true,
  "nextjs.experimental.photoArchivingOptimization": true,
  "nextjs.experimental.guestStorytellingFeatures": true,
  "nextjs.experimental.imageGalleryPerformance": true,
  "nextjs.experimental.staticGenerationOptimization": true,
  "nextjs.experimental.webVitalsMonitoring": true,
  "nextjs.experimental.coreWebVitalsOptimization": true,
  // Creative & Design Assistance for Celebration Site
  "creative.experimental.colorPaletteGeneration": true,
  "creative.experimental.layoutSuggestions": true,
  "creative.experimental.typographyRecommendations": true,
  "creative.experimental.userExperienceOptimization": true,
  "creative.experimental.celebrationThemeConsistency": true,
  "creative.experimental.memoryPresentationDesign": true,
  "creative.experimental.photoGalleryAesthetics": true,
  // Production Readiness Features
  "production.experimental.deploymentValidation": true,
  "production.experimental.lighthouseIntegration": true,
  "production.experimental.crossBrowserTesting": true,
  "production.experimental.performanceMonitoring": true,
  "production.experimental.errorTrackingOptimization": true,
  "production.experimental.securityAuditing": true,
  "search.quickAccess.preserveInput": true,
  "editor.stickyScroll.maxLineCount": 5,
  "cSpell.words": ["firestore"],

  // Jest Configuration for VS Code Extension - Disabled because we use Vitest
  "jest.enable": false,
  "jest.disabledWorkspaceFolders": ["wedding-website"]
}
